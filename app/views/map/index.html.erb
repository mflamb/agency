<!doctype html>
<html lang="en">

<head>
    <!-- OpenLayers is a mapping service that doesn't require
    OAuth Authentication or app registration and is compatible
    with Mapstraction -->
    <link rel="stylesheet" href="https://openlayers.org/en/v4.6.5/css/ol.css" type="text/css">
    <!-- leaflet CDN for using the library and importing GeoJSON -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js"></script>
    <!-- leaflet also recommends using these for extra security purposes -->
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css" integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ==" crossorigin="" />
    <script src="https://unpkg.com/leaflet@1.3.1/dist/leaflet.js" integrity="sha512-/Nsx9X4HebavoBvEBuyp3I7od5tA0UzAxs+j83KgC8PU0kgB4XiK4Lfe4y4cgBtaRJQEIFCW+oC506aPT2L1zw==" crossorigin=""></script>
    <!--  -->
    <style>
    /*literally just resizes the map div*/

    .map {
        height: 50vw;
        width: 80%;
    }
    </style>
    <!-- Javascript -->
    <script src="https://openlayers.org/en/v4.6.5/build/ol.js" type="text/javascript"></script>
    <title>OpenLayers example</title>
</head>

<body>
    <h2>Philly Map</h2>
    <div id="map" class="map"></div>
    <div id="test" class="test"></div>
    <script type="text/javascript">

var layers = {//this will be an object where we can call on each layer to be displayed by running a function that activates them
}

    var neighborhoods_source = new ol.source.Vector({
        url: 'https://raw.githubusercontent.com/azavea/geo-data/master/Neighborhoods_Philadelphia/Neighborhoods_Philadelphia.geojson',
        format: new ol.format.GeoJSON()
    });

    var neighborhoods_layer = new ol.layer.Vector({
        source: neighborhoods_source
    });


    var affordable_source = new ol.source.Vector({
        url: 'http://cors.io/?https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+affordablehousingproduction&filename=affordablehousingproduction&format=geojson&skipfields=cartodb_id',
        format: new ol.format.GeoJSON()
    });
    var affordable_layer = new ol.layer.Vector({
        source: affordable_source
    });

    var housing_counseling_source = new ol.source.Vector({
        url: 'http://cors.io/?http://data.phl.opendata.arcgis.com/datasets/3265538198254e9fb6a8974745adab51_0.geojson',
        format: new ol.format.GeoJSON()
    });
    var housing_counseling_layer = new ol.layer.Vector({
        source: housing_counseling_source
    });

    var map = new ol.Map({
        target: 'map',
        layers: [
            new ol.layer.Tile({
                source: new ol.source.OSM()
            }),
            neighborhoods_layer, housing_counseling_layer//affordable_layer, 


        ],
        view: new ol.View({
            center: ol.proj.fromLonLat([-75.166923, 39.955948]),
            zoom: 13
        })

    });
// geojson parsing objects for each layer here:
    var neighborhood_geojson = <%= @nei_response.html_safe %>;
    console.log(neighborhood_geojson);

    var counseling_geojson = <%= @counsel_response.html_safe %>;
    console.log(counseling_geojson);
    </script>
</body>

</html>