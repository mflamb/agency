
<<<<<<< Updated upstream
<h2>Philly Grid</h2>

<div id="map" class="map">
  <script>


    var layers = {//this will be an object where we can call on each layer to be displayed by running a function that activates them
    }

      // geojson parsing objects for each layer here:
    var neighborhood_geojson = <%= @nei_response.html_safe %>;
    console.log(neighborhood_geojson);

    var counseling_geojson = <%= @counsel_response.html_safe %>;
    console.log(counseling_geojson);

    var neighborhoods_source = new ol.source.Vector({
        url: 'https://raw.githubusercontent.com/azavea/geo-data/master/Neighborhoods_Philadelphia/Neighborhoods_Philadelphia.geojson',
        format: new ol.format.GeoJSON(),
        // crossOrigin: 'anonymous'
    });
    

    var neighborhoods_layer = new ol.layer.Vector({
        source: neighborhoods_source
    });


    var affordable_source = new ol.source.Vector({
        url: 'https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+affordablehousingproduction&filename=affordablehousingproduction&format=geojson&skipfields=cartodb_id',
        format: new ol.format.GeoJSON(),
        // crossOrigin: 'anonymous'
    });
    var affordable_layer = new ol.layer.Vector({
        source: affordable_source
    });

    var housing_counseling_source = new ol.source.Vector({
        url: 'http://data.phl.opendata.arcgis.com/datasets/3265538198254e9fb6a8974745adab51_0.geojson',
        format: new ol.format.GeoJSON(),
        // crossOrigin: 'anonymous'
    });

    var housing_counseling_layer = new ol.layer.Vector({
        source: housing_counseling_source
    });

    var baseMap = new ol.layer.Tile({
        source: new ol.source.OSM(),
        // crossOrigin: 'anonymous'
    });

    var map = new ol.Map({
        target: 'map',
        layers: [baseMap, neighborhoods_layer, housing_counseling_layer, affordable_layer],
        view: new ol.View({
            center: ol.proj.fromLonLat([-75.166923, 39.955948]),
            zoom: 13
        })

    });

    var highlightStyleCache = {};
    var featureOverlay = new ol.layer.Vector({
      source: new ol.source.Vector(),
        map: map,
        style: function(feature, resolution){
          var text = resolution * 100000 < 10 ? feature.get('text') : '';
             if (!highlightStyleCache[text]) {
                 highlightStyleCache[text] = new ol.style.Style({
                     stroke: new ol.style.Stroke({
                         color: '#000066',
                         width: 2
                     }),
                     fill: new ol.style.Fill({
                         color: 'rgba(192,192,192,0.7)'
                     }),
                     text: new ol.style.Text({
                         font: '12px Calibri,sans-serif',
                         text: text,
                         fill: new ol.style.Fill({
                             color: '#000'
                         }),
                         stroke: new ol.style.Stroke({
                             color: '#f00',
                             width: 3
                         })
                     })
                 });
             }
             return highlightStyleCache[text];
         }
     });

    var highlight;
    var displayFeatureInfo = function (pixel) {

        var feature = map.forEachFeatureAtPixel(pixel, function (feature) {
            return feature;
        });

        var info = document.getElementById('info');
        if (feature) {
            info.innerHTML = 'Neighborhood: ' + feature.get('mapname');
      } else {
            info.innerHTML = '&nbsp;';
        }

        if (feature !== highlight) {
            if (highlight) {
                featureOverlay.getSource().removeFeature(highlight);
            }
            if (feature) {
                featureOverlay.getSource().addFeature(feature);
            }
            highlight = feature;
        }

    };

    map.on('pointermove', function(evt) {
    if (evt.dragging) {
      return;
    }
    var pixel = map.getEventPixel(evt.originalEvent);
    displayFeatureInfo(pixel);
  });




        
  </script>
=======
<div class="w3-container">
    <h2>Philly Grid</h2>
    <div id="map" class="map w3-col s8 w3-center">
        <div id="info" class="test"></div>
            <input type="checkbox" id="checkbox_Nej" checked> Toggle Neighborhoods
            <input type="checkbox" id="checkbox" checked> Toggle Affordable Housing
            <input type="checkbox" id="checkbox_counsel" checked> Toggle Housing Counseling
            <input type="checkbox" id="checkbox_parks" checked> Parks

    <script>
    var layers = { //this will be an object where we can call on each layer to be displayed by running a function that activates them
   }

   var neighborhoods_source = new ol.source.Vector({
       url: 'https://raw.githubusercontent.com/azavea/geo-data/master/Neighborhoods_Philadelphia/Neighborhoods_Philadelphia.geojson',
       format: new ol.format.GeoJSON(),
       // crossOrigin: 'anonymous'
   });



   var neighborhoods_layer = new ol.layer.Vector({
       source: neighborhoods_source
   });



   var affordable_source = new ol.source.Vector({
       url: 'https://phl.carto.com/api/v2/sql?q=SELECT+*+FROM+affordablehousingproduction&filename=affordablehousingproduction&format=geojson&skipfields=cartodb_id',
       format: new ol.format.GeoJSON(),
       // crossOrigin: 'anonymous'
   });
   var affordable_layer = new ol.layer.Vector({
       source: affordable_source
   });

   var housing_counseling_source = new ol.source.Vector({
       url: 'http://data.phl.opendata.arcgis.com/datasets/3265538198254e9fb6a8974745adab51_0.geojson',
       format: new ol.format.GeoJSON(),
       // crossOrigin: 'anonymous'
   });

   var housing_counseling_layer = new ol.layer.Vector({
       source: housing_counseling_source
   });

   var parks_source = new ol.source.Vector({
       url: 'http://data.phl.opendata.arcgis.com/datasets/4df9250e3d624ea090718e56a9018694_0.geojson',
       format: new ol.format.GeoJSON()
   });

   var parks_layer = new ol.layer.Vector({
       source: parks_source
   });

   var baseMap = new ol.layer.Tile({
       source: new ol.source.OSM(),
       // crossOrigin: 'anonymous'
   });

   var map = new ol.Map({
       target: 'map',
       layers: [baseMap, neighborhoods_layer, housing_counseling_layer, affordable_layer, parks_layer],
       view: new ol.View({
           center: ol.proj.fromLonLat([-75.166923, 39.955948]),
           zoom: 13
       })

   });


   var highlightStyleCache = {};
   var featureOverlay = new ol.layer.Vector({
       source: new ol.source.Vector(),
       map: map,
       style: function(feature, resolution) {
           var text = resolution * 100000 < 10 ? feature.get('text') : '';
           if (!highlightStyleCache[text]) {
               highlightStyleCache[text] = new ol.style.Style({
                   stroke: new ol.style.Stroke({
                       color: '#000066',
                       width: 2
                   }),
                   fill: new ol.style.Fill({
                       color: 'rgba(192,192,192,0.7)'
                   }),
                   text: new ol.style.Text({
                       font: '12px Calibri,sans-serif',
                       text: text,
                       fill: new ol.style.Fill({
                           color: '#000'
                       }),
                       stroke: new ol.style.Stroke({
                           color: '#f00',
                           width: 3
                       })
                   })
               });
           }
           return highlightStyleCache[text];
       }
   });

   var highlight;
   var displayFeatureInfo = function(pixel) {

       var feature = map.forEachFeatureAtPixel(pixel, function(feature) {
           return feature;
       });

       var info = document.getElementById('info');
       if (feature) {
           info.innerHTML = 'Neighborhood: ' + feature.get('mapname');
       } else {
           info.innerHTML = '&nbsp;';
       }

       if (feature !== highlight) {
           if (highlight) {
               featureOverlay.getSource().removeFeature(highlight);
           }
           if (feature) {
               featureOverlay.getSource().addFeature(feature);
           }
           highlight = feature;
       }

   };


   map.on('pointermove', function(evt) {
       if (evt.dragging) {
           return;
       }
       var pixel = map.getEventPixel(evt.originalEvent);
       displayFeatureInfo(pixel);
   });


   // geojson parsing objects for each layer here:
   var neighborhood_geojson = <%= @nei_response.html_safe %> ;
   console.log(neighborhood_geojson);


   var counseling_geojson = <%= @counsel_response.html_safe %> ;
   console.log(counseling_geojson);

   var affordable_geojson = <%= @affordable_response.html_safe %> ;
   console.log(affordable_geojson);

    var checkbox_f = document.getElementById("checkbox_Nej");

  checkbox_f.addEventListener('click', function() {
      var checked = this.checked;
      console.log(checked);
      if (checked !== neighborhoods_layer.getVisible()) {
          neighborhoods_layer.setVisible(checked);
      }
  });

  neighborhoods_layer.on('click:visible', function() {
      var visible = this.getVisible();
      if (visible !== checkbox.checked) {
          checkbox.checked = visible;
      }
  });

   var checkbox = document.getElementById("checkbox");
   console.log("checkbox:", checkbox);

   checkbox.addEventListener('click', function() {
       var checked = this.checked;
       console.log(checked);
       if (checked !== affordable_layer.getVisible()) {
           affordable_layer.setVisible(checked);
       }
   });

   affordable_layer.on('click:visible', function() {
       var visible = this.getVisible();
       if (visible !== checkbox.checked) {
           checkbox.checked = visible;
       }
   });

   var checkbox_c = document.getElementById("checkbox_counsel");

   checkbox_c.addEventListener('click', function() {
       var checked = this.checked;
       console.log(checked);
       if (checked !== housing_counseling_layer.getVisible()) {
           housing_counseling_layer.setVisible(checked);
       }
   });

   housing_counseling_layer.on('click:visible', function() {
       var visible = this.getVisible();
       if (visible !== checkbox.checked) {
           checkbox.checked = visible;
       }
   });

   var checkbox_d = document.getElementById("checkbox_parks");

   checkbox_d.addEventListener('click', function() {
       var checked = this.checked;
       console.log(checked);
       if (checked !== parks_layer.getVisible()) {
           parks_layer.setVisible(checked);
       }
   });

   parks_layer.on('click:visible', function() {
       var visible = this.getVisible();
       if (visible !== checkbox.checked) {
           checkbox.checked = visible;
       }
   });



      </script>
    </div>

    <div class="panel w3-col s4 w3-center w3-container">
        <div class="row w3-container">
        <h3> Apartments in Philadelphia </h3>
        <p> apartment info section </p>
        </div>
        <div class="row w3-container">
            <h3> Neighborhood Profile </h3>
            <p> neighborhood info section </p>
        </div>
    </div>
>>>>>>> Stashed changes
</div>

<div id="info" class="test"></div>
